import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Comparator;
import java.util.Optional;
import java.util.stream.StreamSupport;

public class JsonUtility {

    private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MMM-yyyy");

    public int getMaturityLevelFromFile(String filePath) {
        try {
            // Parse the JSON file
            ObjectMapper mapper = new ObjectMapper();
            JsonNode rootNode = mapper.readTree(new File(filePath));

            // Determine the maturity level based on acceptance criteria
            Optional<JsonNode> recentNode = getLatestNodeWithAcceptanceCriteria(rootNode);

            // Return the determined maturity level or -1 if not found
            return recentNode.map(node -> node.get("maturityLevel").asInt()).orElse(-1);

        } catch (IOException e) {
            e.printStackTrace();
            return -1;
        }
    }

    private Optional<JsonNode> getLatestNodeWithAcceptanceCriteria(JsonNode rootNode) {
        // Define threshold date (14 days before today)
        LocalDate thresholdDate = LocalDate.now().minusDays(14);

        return StreamSupport.stream(rootNode.spliterator(), false)
            .filter(node -> node.has("disregarded") && !node.get("disregarded").asBoolean()) // Check if disregarded is false
            .filter(node -> node.has("lastDateUsed") && 
                    LocalDate.parse(node.get("lastDateUsed").asText(), formatter).isAfter(thresholdDate)) // Check if last date used is within threshold
            .min(Comparator.comparingInt(node -> node.get("maturityLevel").asInt())); // Select the minimum maturity level within 14 days
    }

    public static void main(String[] args) {
        if (args.length != 1) {
            System.out.println("Usage: java JsonUtility <inputFilePath>");
            return;
        }

        String filePath = args[0];
        JsonUtility utility = new JsonUtility();
        int maturityLevel = utility.getMaturityLevelFromFile(filePath);

        System.out.println("Maturity Level: " + maturityLevel);
    }
}
